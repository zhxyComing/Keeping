package com.dixon.bookkeeping.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.dixon.bookkeeping.bean.DetailItemBean;
import com.dixon.bookkeeping.bean.TotalBean;
import com.dixon.bookkeeping.bean.DayItemBean;
import com.dixon.bookkeeping.bean.SpecialTipBean;

import com.dixon.bookkeeping.db.DetailItemBeanDao;
import com.dixon.bookkeeping.db.TotalBeanDao;
import com.dixon.bookkeeping.db.DayItemBeanDao;
import com.dixon.bookkeeping.db.SpecialTipBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig detailItemBeanDaoConfig;
    private final DaoConfig totalBeanDaoConfig;
    private final DaoConfig dayItemBeanDaoConfig;
    private final DaoConfig specialTipBeanDaoConfig;

    private final DetailItemBeanDao detailItemBeanDao;
    private final TotalBeanDao totalBeanDao;
    private final DayItemBeanDao dayItemBeanDao;
    private final SpecialTipBeanDao specialTipBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        detailItemBeanDaoConfig = daoConfigMap.get(DetailItemBeanDao.class).clone();
        detailItemBeanDaoConfig.initIdentityScope(type);

        totalBeanDaoConfig = daoConfigMap.get(TotalBeanDao.class).clone();
        totalBeanDaoConfig.initIdentityScope(type);

        dayItemBeanDaoConfig = daoConfigMap.get(DayItemBeanDao.class).clone();
        dayItemBeanDaoConfig.initIdentityScope(type);

        specialTipBeanDaoConfig = daoConfigMap.get(SpecialTipBeanDao.class).clone();
        specialTipBeanDaoConfig.initIdentityScope(type);

        detailItemBeanDao = new DetailItemBeanDao(detailItemBeanDaoConfig, this);
        totalBeanDao = new TotalBeanDao(totalBeanDaoConfig, this);
        dayItemBeanDao = new DayItemBeanDao(dayItemBeanDaoConfig, this);
        specialTipBeanDao = new SpecialTipBeanDao(specialTipBeanDaoConfig, this);

        registerDao(DetailItemBean.class, detailItemBeanDao);
        registerDao(TotalBean.class, totalBeanDao);
        registerDao(DayItemBean.class, dayItemBeanDao);
        registerDao(SpecialTipBean.class, specialTipBeanDao);
    }
    
    public void clear() {
        detailItemBeanDaoConfig.clearIdentityScope();
        totalBeanDaoConfig.clearIdentityScope();
        dayItemBeanDaoConfig.clearIdentityScope();
        specialTipBeanDaoConfig.clearIdentityScope();
    }

    public DetailItemBeanDao getDetailItemBeanDao() {
        return detailItemBeanDao;
    }

    public TotalBeanDao getTotalBeanDao() {
        return totalBeanDao;
    }

    public DayItemBeanDao getDayItemBeanDao() {
        return dayItemBeanDao;
    }

    public SpecialTipBeanDao getSpecialTipBeanDao() {
        return specialTipBeanDao;
    }

}
